digraph "helib::FatEncodedPtxt_BGV"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node2 [label="helib::FatEncodedPtxt_BGV",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" dcrt" ];
  Node3 [label="helib::DoubleCRT",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_double_c_r_t.html",tooltip="Implementing polynomials (elements in the ring R_Q) in double-CRT form. "];
  Node4 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" context" ];
  Node4 [label="helib::Context",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_context.html",tooltip="Maintaining the HE scheme parameters. "];
  Node5 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" modSizes" ];
  Node5 [label="helib::ModuliSizes",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_moduli_sizes.html",tooltip="A helper class to map required modulo-sizes to primeSets. "];
  Node6 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" rcData" ];
  Node6 [label="helib::ThinRecryptData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_thin_recrypt_data.html",tooltip="Same as above, but for \"thin\" bootstrapping, where the slots are assumed to contain constants..."];
  Node7 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid"];
  Node7 [label="helib::RecryptData",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_recrypt_data.html",tooltip="A structure to hold recryption-related data inside the Context. "];
  Node8 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ctxtPrimes\nsmallPrimes\nspecialPrimes" ];
  Node8 [label="helib::IndexSet",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_index_set.html",tooltip="A dynamic set of non-negative integers. "];
  Node9 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" zMStar" ];
  Node9 [label="helib::PAlgebra",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_p_algebra.html",tooltip="The structure of (Z/mZ)* /(p) "];
  Node10 -> Node9 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" cube" ];
  Node10 [label="helib::CubeSignature",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_cube_signature.html",tooltip="Holds a vector of dimensions for a hypercube and some additional data. "];
  Node11 -> Node4 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" alMod" ];
  Node11 [label="helib::PAlgebraMod",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_p_algebra_mod.html",tooltip="The structure of Z[X]/(Phi_m(X), p) "];
  Node12 -> Node11 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" rep" ];
  Node12 [label="helib::ClonedPtr\< helib\l::PAlgebraModBase \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_cloned_ptr.html"];
  Node13 -> Node12 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ];
  Node13 [label="helib::PAlgebraModBase",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_p_algebra_mod_base.html",tooltip="Virtual base class for PAlgebraMod. "];
  Node14 -> Node3 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" map" ];
  Node14 [label="helib::IndexMap\< NTL\l::vec_long \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_index_map.html"];
  Node8 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" indexSet" ];
  Node15 -> Node14 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" init" ];
  Node15 [label="helib::ClonedPtr\< helib\l::IndexMapInit\< NTL::vec\l_long \> \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_cloned_ptr.html"];
  Node16 -> Node15 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ptr" ];
  Node16 [label="helib::IndexMapInit\l\< NTL::vec_long \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classhelib_1_1_index_map_init.html"];
}
